# -*- coding: utf-8 -*-
"""concurso_uff_posicao.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1oZFG_aW6fPAAJvhe7y1d8wa1_YeoJZR4
"""

# Instalação das bibliotecas 
!pip install tabula-py
!pip install PyPDF2

# Importação das Bibliotecas
import tabula
import PyPDF2
import pandas as pd

# Definição do caminho
caminho_arquivo_pdf = '/content/UFF-Edital-190-2022-NotasdaProvaEscrita.pdf'

# Contando o número de páginas do pdf. 
pdf_reader = PyPDF2.PdfReader(open(caminho_arquivo_pdf, 'rb'))
num_paginas = len(pdf_reader.pages)
num_paginas

# Extração das tabelas do pdf: O conteúdo das tabelas presentes no PDF é extraído usando a biblioteca tabula e armazenado na variável tabelas.
tabelas = tabula.read_pdf(caminho_arquivo_pdf, pages='all')

# Criação de dataframes: Um loop é utilizado para percorrer as tabelas extraídas. Cada tabela não vazia é adicionada à lista dataframes

dataframes = []
for tabela in tabelas:
    # Verifica se a tabela extraída tem conteúdo
    if not tabela.empty:
        dataframes.append(tabela)

# Concatenação dos dataframes: Os dataframes presentes na lista dataframes são concatenados em um único dataframe, df, usando a função pd.concat
df = pd.concat(dataframes, ignore_index=True)

df.head(5)

# Manipulação do dataframe: São realizadas operações para filtrar e reorganizar o dataframe df, incluindo a identificação de um índice de início e fim com base em valores específicos na coluna 'Inscrição'

indices = df[df['Inscrição'] == 2018289482]
indices = df.index[df['Inscrição'] == 2018289482]
indice_inicio = indices[0] if len(indices) > 0 else len(df)

df = df.iloc[indice_inicio:].copy()

df.reset_index(drop=True, inplace=True)

df.head()

indice_fim = df[df['Inscrição'] == 2018270338].index[0] + 1
# Excluir os registros acima
df = df.iloc[:indice_fim]
df.reset_index(drop=True, inplace=True)

pd.set_option('display.max_columns', None)  # Exibir todas as colunas
pd.set_option('display.max_rows', None)  # Exibir todas as linhas
pd.set_option('display.width', None)

valores_distintos = df['Pontos'].unique()
valores_distintos

valores_distintos = df['Pontos.2'].unique()
valores_distintos

df = df.loc[df['Pontos'] != 'faltou']
df = df.loc[df['Pontos'] != 'Parte I']
df = df.loc[df['Pontos'] != 'Eliminado']

colunas_desejadas = ['Inscrição', 'Nome do Candidato','Data de','Pontos','Pontos.1','Pontos.2']
df = df[colunas_desejadas]

df.head()

df['Pontos'] = pd.to_numeric(df['Pontos'].str.replace(',', '.'))
df['Pontos.1'] = pd.to_numeric(df['Pontos.1'].str.replace(',', '.'))
df['Pontos.2'] = pd.to_numeric(df['Pontos.2'].str.replace(',', '.'))

df['NOTA_FINAL'] = df['Pontos'] + df['Pontos.1'] + df['Pontos.2']

df = df.sort_values(by='NOTA_FINAL', ascending=False)

df = df.reset_index(drop=True)

df.head(100)
